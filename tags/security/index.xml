<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on</title><link>https://foreops.com/tags/security/</link><description>Recent content in security on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 08 Jul 2021 11:38:38 -0400</lastBuildDate><atom:link href="https://foreops.com/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Securing your Code for Production</title><link>https://foreops.com/blog/code-security/</link><pubDate>Thu, 08 Jul 2021 11:38:38 -0400</pubDate><guid>https://foreops.com/blog/code-security/</guid><description>Defense in depth is a concept where you implement multiple overlapping layers of security to provide protection even if one layer is compromised. Traditionally security was implemented at endpoints, for instance, a firewall controlling network traffic and email filtering. A defense in depth approach would filter emails at the firewall and through anti-virus software on the desktops. Why install the desktop software on desktops when the firewall is filtering emails?</description></item><item><title>Container Scanning with Trivy in Jenkins</title><link>https://foreops.com/blog/trivy-intro/</link><pubDate>Fri, 02 Jul 2021 11:00:00 -0400</pubDate><guid>https://foreops.com/blog/trivy-intro/</guid><description>You can identify and address the security vulnerabilities earlier in the software development life-cycle if you integrate a scanner in the continuous integration (CI) pipelines. There are multiple open-source and commercial tools out there that can scan the applications and containers. When comparing these tools, we consider the following aspects:
Easier integration with the pipelines through plugins, scripts, or API calls. Faster, ideally synchronous execution. It should not hold up the build pipeline.</description></item></channel></rss>