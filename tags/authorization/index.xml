<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>authorization on</title><link>https://foreops.com/tags/authorization/</link><description>Recent content in authorization on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 28 Jun 2021 11:00:16 -0400</lastBuildDate><atom:link href="https://foreops.com/tags/authorization/index.xml" rel="self" type="application/rss+xml"/><item><title>Admission Control in Kubernetes</title><link>https://foreops.com/blog/kubernetes-admission-control/</link><pubDate>Mon, 28 Jun 2021 11:00:16 -0400</pubDate><guid>https://foreops.com/blog/kubernetes-admission-control/</guid><description>They come in handy to implement or validate resource limits or ensure that the deployments are not using the &amp;ldquo;latest&amp;rdquo; image tags. For instance, you can restrict pods to pull container images from certain registries or disallow containers to run in privileged mode. In addition, admission controllers can enforce label naming conventions or add annotations, such as a cost center to objects.
The admission controllers intercept requests made to the API server before the persistence of the object.</description></item><item><title>Kubernetes Authorization</title><link>https://foreops.com/blog/kubernetes-authorization/</link><pubDate>Fri, 11 Jun 2021 21:31:44 -0400</pubDate><guid>https://foreops.com/blog/kubernetes-authorization/</guid><description>Kubernetes API Server is implemented as a RESTful API service and acts as a front end to its control plane. REST is an architecture style developed by Roy Thomas Fielding. One of the guiding principles of REST is statelessness. Each request from a client must contain all the information required to complete the request, including authentication and authorization. The RESTful API implementation in Kubernetes makes it compatible with existing on-prem or cloud access systems.</description></item></channel></rss>